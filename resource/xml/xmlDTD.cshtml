<h1><span class="label label-success">XML-DTD(Document Type Declaration)</span></h1>
<script type="text/javascript">
    $(function () {
        $(".list-group.auto li").addClass("list-group-item");
    });
    </script>
<div class="well">
    The XML Document Type Declaration, commonly known as DTD, is a way to describe
XML language precisely.<br /> DTDs check vocabulary and validity of the structure of XML
documents against grammatical rules of appropriate XML language.<br />
An XML DTD can be either specified inside the document, or it can be kept in a separate document and then liked separately.<br />
Syntax<br />
    Basic syntax of a DTD is as follows:
    <pre>
&lt!DOCTYPE element DTD identifier
        </pre>
    <ul class="list-group auto">
    <li> DTD identifier is an identifier for the document type definition, which may be the path to a file on the system
         or URL to a file on the internet. If the DTD is pointing to external path, it is called External Subset.</li>
<li> The square brackets [ ] enclose an optional list of entity declarations called Internal Subset.</li>
    </ul>
  <h3><span class="label label-warning">Internal DTD</span></h3>  
A DTD is referred to as an internal DTD if elements are declared within the XML files.<br />
To refer it as internal DTD, standalone attribute in XML declaration must be set
to yes.<br /> This means, the declaration works independent of external source.<br />
Syntax<br />
The syntax of internal DTD is as shown:<br />
    <pre>
&lt !DOCTYPE root-element [element-declarations]&gt 
        </pre>
where root-element is the name of root element and element-declarations is where you declare the elements.<br />
Example<br />
Following is a simple example of internal DTD:<br />
    <pre>
&lt ?xml version="1.0" encoding="UTF-8" standalone="yes" ?&gt 
&lt !DOCTYPE address [
&lt !ELEMENT address (name,company,phone)&gt 
&lt !ELEMENT name (#PCDATA)&gt 
&lt !ELEMENT company (#PCDATA)&gt 
&lt !ELEMENT phone (#PCDATA)&gt 
]&gt 
&lt address&gt 
&lt name&gt Tanmay Patil&lt /name&gt 
&lt company&gt TutorialsPoint&lt /company&gt 
&lt phone&gt (011) 123-4567&lt /phone&gt 
        &lt/address&gt
        </pre>
    Let us go through the above code:<br />
Start Declaration- Begin the XML declaration with following statement
    <pre>
&lt ?xml version="1.0" encoding="UTF-8" standalone="yes" ?&gt 
        </pre>
DTD- Immediately after the XML header, the document type declaration follows, commonly referred to as the DOCTYPE:
    <pre>
&lt !DOCTYPE address [
        </pre>
The DOCTYPE declaration has an exclamation mark (!) at the start of the element
name.<br /> The DOCTYPE informs the parser that a DTD is associated with this XML
document.<br />
DTD Body- The DOCTYPE declaration is followed by body of the DTD, where you declare elements, attributes, entities,<br />
     and notations:
    <pre>
&lt !ELEMENT address (name,company,phone)&gt 
&lt !ELEMENT name (#PCDATA)&gt 
&lt !ELEMENT company (#PCDATA)&gt 
&lt !ELEMENT phone_no (#PCDATA)&gt 
        </pre>
Several elements are declared here that make up the vocabulary of the &lt name&gt 
document.<br />
 &lt !ELEMENT name (#PCDATA)&gt  defines the element name to be of type "#PCDATA". Here #PCDATA means parse-able text data.<br />
End Declaration - Finally, the declaration section of the DTD is closed using a closing bracket and a closing angle<br />
     bracket (]&gt ). This effectively ends the definition, and thereafter, the XML document follows immediately.<br />
    Rules<br />
    <ul class="list-group auto">
<li> The document type declaration must appear at the start of the document (preceded only by the XML header) — it<br />
     is not permitted anywhere else within the document.</li>
<li> Similar to the DOCTYPE declaration, the element declarations must start with an exclamation
mark.</li>
<li> The Name in the document type declaration must match the element type of the root element.</li>
        </ul>
  <h1><span class="label label-warning">  External DTD</span></h1>
In external DTD elements are declared outside the XML file.<br />
  They are accessed by specifying the system attributes which may be either the legal .dtd file or a valid URL.<br />
To refer it as external DTD, standalone attribute in the XML declaration must be set as no.<br />
     This means, declaration includes information from the external source.<br />
Syntax<br />
Following is the syntax for external DTD:<br />
    <pre>
&lt !DOCTYPE root-element SYSTEM "file-name"&gt 
        </pre>
where file-name is the file with .dtd extension.<br />
 <h3><span class="label label-warning">Types</span></h3>   
You can refer to an external DTD by using either system identifiers or public identifiers.<br />
SYSTEM IDENTIFIERS<br />
A system identifier enables you to specify the location of an external file containing DTD declarations.<br />
     Syntax is as follows:<br />
    <pre>
&lt!DOCTYPE name SYSTEM "address.dtd" [...]&gt
        </pre>
As you can see, it contains keyword SYSTEM and a URI reference pointing to the location of the document.<br />
PUBLIC IDENTIFIERS<br />
Public identifiers provide a mechanism to locate DTD resources and are written as
below:
    <pre>
&lt!DOCTYPE name PUBLIC "-//Beginning XML//DTD Address Example//EN"&gt
        </pre>
As you can see, it begins with keyword PUBLIC, followed by a specialized identifier.<br />
Public identifiers are used to identify an entry in a catalog.<br /> Public identifiers can follow
any format, however, a commonly used format is called Formal Public Identifiers, or
FPIs.<br />

</div>